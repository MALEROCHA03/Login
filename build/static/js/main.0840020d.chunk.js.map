{"version":3,"sources":["helpers/fetch.js","types/types.js","context/chat/chatReducer.js","context/chat/ChatContext.js","auth/AuthContext.js","context/SocketContext.js","hooks/useSocket.js","helpers/scrollToBottom.js","components/ChatSelect.js","components/Searchbox.js","components/SidebarChatItem.js","components/Sidebar.js","components/InboxPeople.js","helpers/horaMes.js","components/IncomingMessage.js","components/OutgoingMessage.js","components/SendMessage.js","components/Messages.js","pages/ChatPage.js","pages/into.png","pages/LoginPage.js","pages/RegisterPage.js","router/AuthRouter.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","ChatApp.js","index.js"],"names":["baseUrl","process","REACT_APP_API_URL","fetchSinToken","endpoint","data","a","method","url","fetch","resp","json","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","chatReducer","state","action","type","uid","activeChat","users","messages","payload","from","to","ChatContext","createContext","initialState","mensajes","ChatProvider","children","useReducer","chatState","dispatch","Provider","value","AuthContext","checking","logged","name","email","position","AuthProvider","useState","auth","setAuth","useContext","login","password","ok","setItem","user","register","msg","verificaToken","useCallback","console","log","logout","removeItem","SocketContext","SocketProvider","serverPath","socket","setSocket","online","setOnline","conectarSocket","socketTemp","io","connect","transports","autoConnect","forceNew","query","desconectarSocket","disconnect","useEffect","connected","on","useSocket","mensaje","id","animateScroll","scrollToBottom","containerId","duration","ChatSelect","className","Searchbox","onClick","color","style","cursor","SidebarChatItem","src","alt","fontWeight","Sidebar","filter","map","InboxPeople","horaMes","fecha","moment","format","IncomingMessage","message","createdAt","OutgoingMessage","SendMessage","setMessage","onSubmit","ev","preventDefault","length","emit","placeholder","onChange","target","Messages","_id","ChatPage","LoginPage","rememberme","form","setForm","Swal","fire","img","checked","readOnly","disabled","RegisterPage","AuthRouter","exact","path","component","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","AppRouter","locale","ChatApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0840020d.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchSinToken = async (endpoint, data, method = \"GET\") => {\r\n  const url = `${baseUrl}/${endpoint}`;\r\n\r\n  if (method === \"GET\") {\r\n    const resp = await fetch(url);\r\n    return await resp.json();\r\n  } else {\r\n    const resp = await fetch(url, {\r\n      method,\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    return await resp.json();\r\n  }\r\n};\r\n\r\nexport const fetchConToken = async (endpoint, data, method = \"GET\") => {\r\n  const url = `${baseUrl}/${endpoint}`;\r\n  const token = localStorage.getItem(\"token\") || \"\";\r\n\r\n  if (method === \"GET\") {\r\n    const resp = await fetch(url, {\r\n      headers: {\r\n        \"x-token\": token,\r\n      },\r\n    });\r\n    return await resp.json();\r\n  } else {\r\n    const resp = await fetch(url, {\r\n      method,\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        \"x-token\": token,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    return await resp.json();\r\n  }\r\n};\r\n","export const types = {\r\n  usuariosCargados: \"[Chat] Usuarios cargados\",\r\n  activarChat: \"[Chat] Activar Chat\",\r\n  nuevoMensaje: \"[Chat] Nuevo Mensaje\",\r\n  cargarMensajes: \"[Chat] Cargar Mensajes\",\r\n  cerrarSesion: \"[Chat] Cerrar sesión\",\r\n};\r\n","import { types } from \"../../types/types\";\r\n\r\n// const initialState = {\r\n//     uid: '',\r\n//     activeChat: null, // UID del usuario al que yo quiero enviar messages\r\n//     usuarios: [], // Todos los usuarios de la base datos\r\n//     messages: [], // El chat seleccionado\r\n// }\r\n\r\nexport const chatReducer = (state, action) => {\r\n  //console.log(action);\r\n\r\n  switch (action.type) {\r\n    case types.cerrarSesion:\r\n      return {\r\n        uid: \"\",\r\n        activeChat: null,\r\n        users: [],\r\n        messages: [],\r\n      };\r\n\r\n    case types.usuariosCargados:\r\n      return {\r\n        ...state,\r\n        users: [...action.payload],\r\n      };\r\n\r\n    case types.activarChat:\r\n      if (state.activeChat === action.payload) return state;\r\n\r\n      return {\r\n        ...state,\r\n        activeChat: action.payload,\r\n        messages: [],\r\n      };\r\n\r\n    case types.nuevoMensaje:\r\n      if (\r\n        state.activeChat === action.payload.from ||\r\n        state.activeChat === action.payload.to\r\n      ) {\r\n        return {\r\n          ...state,\r\n          messages: [...state.messages, action.payload],\r\n        };\r\n      } else {\r\n        return state;\r\n      }\r\n\r\n    case types.cargarMensajes:\r\n      return {\r\n        ...state,\r\n        messages: [...action.payload],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport { chatReducer } from \"./chatReducer\";\r\n\r\nexport const ChatContext = createContext();\r\n\r\nconst initialState = {\r\n  uid: \"\",\r\n  activeChat: null, // UID del usuario al que yo quiero enviar mensajes\r\n  users: [], // Todos los usuarios de la base datos\r\n  mensajes: [], // El chat seleccionado\r\n};\r\n\r\nexport const ChatProvider = ({ children }) => {\r\n  const [chatState, dispatch] = useReducer(chatReducer, initialState);\r\n\r\n  return (\r\n    <ChatContext.Provider\r\n      value={{\r\n        chatState,\r\n        dispatch,\r\n      }}\r\n    >\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n","import React, { createContext, useCallback, useContext, useState } from \"react\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { ChatContext } from \"../context/chat/ChatContext\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst initialState = {\r\n  uid: null,\r\n  checking: true,\r\n  logged: false,\r\n  name: null,\r\n  email: null,\r\n  position: null,\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [auth, setAuth] = useState(initialState);\r\n  const { dispatch } = useContext(ChatContext);\r\n\r\n  const login = async (email, password) => {\r\n    const resp = await fetchSinToken(\"login\", { email, password }, \"POST\");\r\n\r\n    if (resp.ok) {\r\n      localStorage.setItem(\"token\", resp.token);\r\n      const { user } = resp;\r\n\r\n      setAuth({\r\n        uid: user.uid,\r\n        checking: false,\r\n        logged: true,\r\n        name: user.name,\r\n        email: user.email,\r\n        position: user.position,\r\n      });\r\n    }\r\n\r\n    return resp.ok;\r\n  };\r\n\r\n  const register = async (name, email, password, position) => {\r\n    const resp = await fetchSinToken(\r\n      \"login/new\",\r\n      { name, email, password, position },\r\n      \"POST\"\r\n    );\r\n\r\n    if (resp.ok) {\r\n      localStorage.setItem(\"token\", resp.token);\r\n      const { user } = resp;\r\n\r\n      setAuth({\r\n        uid: user.uid,\r\n        checking: false,\r\n        logged: true,\r\n        name: user.name,\r\n        email: user.email,\r\n        position: user.position,\r\n      });\r\n\r\n      return true;\r\n    }\r\n\r\n    return resp.msg;\r\n  };\r\n\r\n  const verificaToken = useCallback(async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    // Si token no existe\r\n    if (!token) {\r\n      setAuth({\r\n        uid: null,\r\n        checking: false,\r\n        logged: false,\r\n        name: null,\r\n        email: null,\r\n        position: null,\r\n      });\r\n\r\n      return false;\r\n    }\r\n\r\n    const resp = await fetchConToken(\"login/renew\");\r\n    if (resp.ok) {\r\n      console.log(resp);\r\n      localStorage.setItem(\"token\", resp.token);\r\n      const { user } = resp;\r\n\r\n      setAuth({\r\n        uid: user.uid,\r\n        checking: false,\r\n        logged: true,\r\n        name: user.name,\r\n        email: user.email,\r\n        position: user.position,\r\n      });\r\n\r\n      return true;\r\n    } else {\r\n      setAuth({\r\n        uid: null,\r\n        checking: false,\r\n        logged: false,\r\n        name: null,\r\n        email: null,\r\n        position: null,\r\n      });\r\n\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    dispatch({\r\n      type: types.cerrarSesion,\r\n    });\r\n    setAuth({\r\n      checking: false,\r\n      logged: false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        auth,\r\n        login,\r\n        register,\r\n        verificaToken,\r\n        logout,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { createContext } from \"react\";\r\n\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\nimport { ChatContext } from \"./chat/ChatContext\";\r\nimport { useSocket } from \"../hooks/useSocket\";\r\n\r\nimport { types } from \"../types/types\";\r\nimport { scrollToBottomAnimated } from \"../helpers/scrollToBottom\";\r\n\r\nexport const SocketContext = createContext();\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n    const { socket, online, conectarSocket, desconectarSocket } = useSocket(\r\n        \"https://backchat1.herokuapp.com\"\r\n    );\r\n    const { auth } = useContext(AuthContext);\r\n    const { dispatch } = useContext(ChatContext);\r\n\r\n    useEffect(() => {\r\n        if (auth.logged) {\r\n            conectarSocket();\r\n        }\r\n    }, [auth, conectarSocket]);\r\n\r\n    useEffect(() => {\r\n        if (!auth.logged) {\r\n            desconectarSocket();\r\n        }\r\n    }, [auth, desconectarSocket]);\r\n\r\n    // Escuchar los cambios en los usuarios conectados\r\n    useEffect(() => {\r\n        socket?.on(\"user-list\", (users) => {\r\n            dispatch({\r\n                type: types.usuariosCargados,\r\n                payload: users,\r\n            });\r\n        });\r\n    }, [socket, dispatch]);\r\n\r\n    useEffect(() => {\r\n        socket?.on(\"personal-message\", (mensaje) => {\r\n            console.log(mensaje);\r\n            dispatch({\r\n                type: types.nuevoMensaje,\r\n                payload: mensaje,\r\n            });\r\n\r\n            scrollToBottomAnimated(\"mensajes\");\r\n        });\r\n    }, [socket, dispatch]);\r\n\r\n    return (\r\n        <SocketContext.Provider value={{ socket, online }}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    );\r\n};\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\n\r\nexport const useSocket = ( serverPath ) => {\r\n    \r\n    const [ socket, setSocket ] = useState(null);\r\n    const [ online, setOnline ] = useState(false);\r\n\r\n    const conectarSocket = useCallback( () => {\r\n\r\n        const token = localStorage.getItem('token');\r\n\r\n        const socketTemp = io.connect( serverPath, { \r\n            transports: ['websocket'],\r\n            autoConnect: true,\r\n            forceNew: true,\r\n            query: {\r\n                'x-token': token\r\n            }\r\n        });\r\n        setSocket( socketTemp );\r\n    },[ serverPath ]);\r\n\r\n    const desconectarSocket = useCallback( () => {\r\n        socket?.disconnect();\r\n    },[ socket ]);\r\n\r\n\r\n    useEffect(() => {\r\n        setOnline( socket?.connected );\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket?.on('connect', () => setOnline( true ));\r\n    }, [ socket ])\r\n\r\n    useEffect(() => {\r\n        socket?.on('disconnect', () => setOnline( false ));\r\n    }, [ socket ])\r\n\r\n    return {\r\n        socket,\r\n        online,\r\n        conectarSocket,\r\n        desconectarSocket\r\n    }\r\n}","import { animateScroll } from 'react-scroll';\r\n\r\n\r\nexport const scrollToBottom = ( id ) => {\r\n    \r\n    animateScroll.scrollToBottom({\r\n        containerId: id,\r\n        duration: 0\r\n    });\r\n\r\n}\r\n\r\nexport const scrollToBottomAnimated = ( id ) => {\r\n    \r\n    animateScroll.scrollToBottom({\r\n        containerId: id,\r\n        duration: 250\r\n    });\r\n\r\n}","import React from 'react'\r\n\r\nexport const ChatSelect = () => {\r\n    return (\r\n        <div className=\"middle-screen\">\r\n            <div className=\"alert-info\">\r\n                <hr />\r\n                <h3>Seleccione una persona</h3>\r\n                <span>\r\n                    Para comenzar una conversación\r\n                </span>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\n\r\nexport const Searchbox = () => {\r\n  const { auth, logout } = useContext(AuthContext);\r\n\r\n  return (\r\n    <div className=\"headind_srch\">\r\n      <div className=\"recent_heading mt-2\">\r\n        <h4>{auth.name}</h4>\r\n      </div>\r\n      <div className=\"srch_bar\">\r\n        <div className=\"stylish-input-group\">\r\n          <box-icon\r\n            onClick={logout}\r\n            name=\"exit\"\r\n            type=\"solid\"\r\n            color=\"#ffffff\"\r\n            style={{ cursor: \"pointer\" }}\r\n          ></box-icon>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { ChatContext } from \"../context/chat/ChatContext\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { scrollToBottom } from \"../helpers/scrollToBottom\";\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nexport const SidebarChatItem = ({ user }) => {\r\n  //console.log(user);\r\n  const { chatState, dispatch } = useContext(ChatContext);\r\n  const { activeChat } = chatState;\r\n\r\n  const onClick = async () => {\r\n    dispatch({\r\n      type: types.activarChat,\r\n      payload: user.uid,\r\n    });\r\n\r\n    // Cargar los mensajes del chat\r\n    const resp = await fetchConToken(`messages/${user.uid}`);\r\n    console.log(resp);\r\n    dispatch({\r\n      type: types.cargarMensajes,\r\n      payload: resp.messages,\r\n    });\r\n\r\n    scrollToBottom(\"mensajes\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`chat_list ${user.uid === activeChat && \"active_chat\"}`}\r\n      onClick={onClick}\r\n    >\r\n      {/* active_chat */}\r\n      <div className=\"chat_people\">\r\n        <div className=\"chat_img\">\r\n          <img\r\n            src=\"https://image.flaticon.com/icons/png/512/206/206899.png\"\r\n            alt=\"sunil\"\r\n          />\r\n        </div>\r\n        <div className=\"chat_ib\">\r\n          <h5 style={{ fontWeight: \"500\" }}> {user.name}</h5>\r\n          <p>{user.position}</p>\r\n          {user.online ? (\r\n            <span className=\"text-success\">Online</span>\r\n          ) : (\r\n            <span className=\"text-danger\">Offline</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\nimport { ChatContext } from \"../context/chat/ChatContext\";\r\n\r\nimport { SidebarChatItem } from \"./SidebarChatItem\";\r\n\r\nexport const Sidebar = () => {\r\n  const { chatState } = useContext(ChatContext);\r\n  console.log(chatState);\r\n  const { auth } = useContext(AuthContext);\r\n\r\n  const { uid } = auth;\r\n\r\n  return (\r\n    <div className=\"inbox_chat\">\r\n      {chatState.users\r\n        .filter((user) => user.uid !== uid)\r\n        .map((user) => (\r\n          <SidebarChatItem key={user.uid} user={user} />\r\n        ))}\r\n\r\n      {/* <!-- Espacio extra para scroll --> */}\r\n      <div className=\"extra_space\"></div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Searchbox } from './Searchbox';\r\nimport { Sidebar } from './Sidebar';\r\n\r\nexport const InboxPeople = () => {\r\n    return (\r\n        <div className=\"inbox_people\">\r\n\r\n            <Searchbox />\r\n\r\n            <Sidebar />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import moment from 'moment';\r\n\r\n\r\nexport const horaMes = ( fecha ) => {\r\n\r\n    const hoyMes = moment( fecha );\r\n\r\n    return hoyMes.format('HH:mm a | MMMM Do');\r\n\r\n}","import React from \"react\";\r\nimport { horaMes } from \"../helpers/horaMes\";\r\n\r\nexport const IncomingMessage = ({ msg }) => {\r\n  console.log(msg);\r\n  console.log(msg.message);\r\n  return (\r\n    <div className=\"incoming_msg\">\r\n      <div className=\"incoming_msg_img\">\r\n        <img\r\n          src=\"https://ptetutorials.com/images/user-profile.png\"\r\n          alt=\"sunil\"\r\n        />\r\n      </div>\r\n      <div className=\"received_msg\">\r\n        <div className=\"received_withd_msg\">\r\n          <p>{msg.message}</p>\r\n          <span className=\"time_date\"> {horaMes(msg.createdAt)}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { horaMes } from \"../helpers/horaMes\";\r\n\r\nexport const OutgoingMessage = ({ msg }) => {\r\n  return (\r\n    <div className=\"outgoing_msg\">\r\n      <div className=\"sent_msg\">\r\n        <p>{msg.message}</p>\r\n        <span className=\"time_date\"> {horaMes(msg.createdAt)} </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\n\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\nimport { ChatContext } from \"../context/chat/ChatContext\";\r\nimport { SocketContext } from \"../context/SocketContext\";\r\n\r\nexport const SendMessage = () => {\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const { socket } = useContext(SocketContext);\r\n  const { auth } = useContext(AuthContext);\r\n  const { chatState } = useContext(ChatContext);\r\n\r\n  const onChange = ({ target }) => {\r\n    setMessage(target.value);\r\n  };\r\n\r\n  const onSubmit = (ev) => {\r\n    ev.preventDefault();\r\n\r\n    if (message.length === 0) {\r\n      return;\r\n    }\r\n    console.log(message);\r\n    setMessage(\"\");\r\n\r\n    socket.emit(\"personal-message\", {\r\n      from: auth.uid,\r\n      to: chatState.activeChat,\r\n      message,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <div className=\"type_msg row\">\r\n        <div className=\"input_msg_write col-sm-9\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"write_msg\"\r\n            placeholder=\"Escribe tu mensaje...\"\r\n            value={message}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-sm-3 text-center\">\r\n          <button className=\"msg_send_btn mt-3\" type=\"submit\">\r\n            enviar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\nimport { ChatContext } from \"../context/chat/ChatContext\";\r\n\r\nimport { IncomingMessage } from \"./IncomingMessage\";\r\nimport { OutgoingMessage } from \"./OutgoingMessage\";\r\nimport { SendMessage } from \"./SendMessage\";\r\n\r\nexport const Messages = () => {\r\n  const { chatState } = useContext(ChatContext);\r\n  const { auth } = useContext(AuthContext);\r\n\r\n  return (\r\n    <div className=\"mesgs\">\r\n      {/* <!-- Historia inicio --> */}\r\n      <div id=\"mensajes\" className=\"msg_history\">\r\n        {chatState.messages.map((msg) =>\r\n          msg.to === auth.uid ? (\r\n            <IncomingMessage key={msg._id} msg={msg} />\r\n          ) : (\r\n            <OutgoingMessage key={msg._id} msg={msg} />\r\n          )\r\n        )}\r\n      </div>\r\n      {/* <!-- Historia Fin --> */}\r\n\r\n      <SendMessage />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { ChatSelect } from \"../components/ChatSelect\";\r\nimport { InboxPeople } from \"../components/InboxPeople\";\r\nimport { Messages } from \"../components/Messages\";\r\nimport { ChatContext } from \"../context/chat/ChatContext\";\r\n\r\nimport \"../css/chat.css\";\r\n\r\nexport const ChatPage = () => {\r\n  const { chatState } = useContext(ChatContext);\r\n\r\n  return (\r\n    <div className=\"messaging\">\r\n      <div className=\"inbox_msg\">\r\n        <InboxPeople />\r\n\r\n        {chatState.activeChat ? <Messages /> : <ChatSelect />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/into.45bffa87.png\";","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\nimport img from \"./into.png\";\r\n\r\nexport const LoginPage = () => {\r\n  const { login } = useContext(AuthContext);\r\n\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    rememberme: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const email = localStorage.getItem(\"email\");\r\n    if (email) {\r\n      setForm((form) => ({\r\n        ...form,\r\n        email,\r\n        rememberme: true,\r\n      }));\r\n    }\r\n  }, []);\r\n\r\n  const onChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    setForm({\r\n      ...form,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const toggleCheck = () => {\r\n    console.log(\"??\");\r\n    setForm({\r\n      ...form,\r\n      rememberme: !form.rememberme,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (ev) => {\r\n    ev.preventDefault();\r\n\r\n    form.rememberme\r\n      ? localStorage.setItem(\"email\", form.email)\r\n      : localStorage.removeItem(\"email\");\r\n\r\n    const { email, password } = form;\r\n    const ok = await login(email, password);\r\n\r\n    if (!ok) {\r\n      Swal.fire(\"Error\", \"Verifique el usuario y contraseña\", \"error\");\r\n    }\r\n  };\r\n\r\n  const todoOk = () => {\r\n    return form.email.length > 0 && form.password.length > 0 ? true : false;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form\r\n        className=\"login100-form validate-form flex-sb flex-w\"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <img className=\"logoInstopol\" src={img} alt=\"logo\" />\r\n        <span className=\"login100-form-title mb-3\"></span>\r\n        <div className=\"wrap-input100 validate-input mb-3\">\r\n          <input\r\n            className=\"input100\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={form.email}\r\n            onChange={onChange}\r\n          />\r\n          <span className=\"focus-input100\"></span>\r\n        </div>\r\n\r\n        <div className=\"wrap-input100 validate-input mb-3\">\r\n          <input\r\n            className=\"input100\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={form.password}\r\n            onChange={onChange}\r\n          />\r\n          <span className=\"focus-input100\"></span>\r\n        </div>\r\n\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col\" onClick={() => toggleCheck()}>\r\n            <input\r\n              className=\"input-checkbox100\"\r\n              id=\"ckb1\"\r\n              type=\"checkbox\"\r\n              name=\"rememberme\"\r\n              checked={form.rememberme}\r\n              readOnly\r\n            />\r\n            <label className=\"label-checkbox100\">Recordarme</label>\r\n          </div>\r\n\r\n          <div className=\"col text-right\">\r\n            <Link to=\"/auth/register\" className=\"txt1\">\r\n              Nueva cuenta?\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container-login100-form-btn m-t-17\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"login100-form-btn\"\r\n            disabled={!todoOk()}\r\n          >\r\n            Ingresar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\nimport img from \"./into.png\";\r\n\r\nexport const RegisterPage = () => {\r\n    const { register } = useContext(AuthContext);\r\n\r\n    const [form, setForm] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        name: \"\",\r\n        position: \"\",\r\n    });\r\n\r\n    const onChange = ({ target }) => {\r\n        const { name, value } = target;\r\n        setForm({\r\n            ...form,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const onSubmit = async (ev) => {\r\n        ev.preventDefault();\r\n\r\n        const { email, password, name, position } = form;\r\n        const msg = await register(name, email, password, position);\r\n\r\n        if (msg !== true) {\r\n            Swal.fire(\"Error\", msg, \"error\");\r\n        }\r\n    };\r\n\r\n    const todoOk = () => {\r\n        return form.email.length > 0 &&\r\n            form.password.length > 0 &&\r\n            form.name.length > 0 &&\r\n            form.position.length > 0\r\n            ? true\r\n            : false;\r\n    };\r\n\r\n    return (\r\n        <form\r\n            className=\"login100-form validate-form flex-sb flex-w\"\r\n            onSubmit={onSubmit}\r\n        >\r\n            <img className=\"logoInstopol\" src={img} alt=\"logo\" />\r\n            <span className=\"login100-form-title mb-3\">Registrate</span>\r\n\r\n            <div className=\"wrap-input100 validate-input mb-3\">\r\n                <input\r\n                    className=\"input100\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Nombre\"\r\n                    value={form.name}\r\n                    onChange={onChange}\r\n                />\r\n                <span className=\"focus-input100\"></span>\r\n            </div>\r\n\r\n            <div className=\"wrap-input100 validate-input mb-3\">\r\n                <input\r\n                    className=\"input100\"\r\n                    type=\"text\"\r\n                    name=\"position\"\r\n                    placeholder=\"Cargo\"\r\n                    value={form.position}\r\n                    onChange={onChange}\r\n                />\r\n                <span className=\"focus-input100\"></span>\r\n            </div>\r\n\r\n            <div className=\"wrap-input100 validate-input mb-3\">\r\n                <input\r\n                    className=\"input100\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={form.email}\r\n                    onChange={onChange}\r\n                />\r\n                <span className=\"focus-input100\"></span>\r\n            </div>\r\n\r\n            <div className=\"wrap-input100 validate-input mb-3\">\r\n                <input\r\n                    className=\"input100\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={form.password}\r\n                    onChange={onChange}\r\n                />\r\n                <span className=\"focus-input100\"></span>\r\n            </div>\r\n\r\n            <div className=\"row mb-3\">\r\n                <div className=\"col text-right\">\r\n                    <Link to=\"/auth/login\" className=\"txt1\">\r\n                        Ya tienes cuenta?\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container-login100-form-btn m-t-17\">\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"login100-form-btn\"\r\n                    disabled={!todoOk()}\r\n                >\r\n                    Crear cuenta\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport { LoginPage } from '../pages/LoginPage';\r\nimport { RegisterPage } from '../pages/RegisterPage';\r\n\r\nimport '../css/login-register.css';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n\r\n        <div className=\"limiter\">\r\n\t\t    <div className=\"container-login100\">\r\n\t\t\t    <div className=\"wrap-login100 p-t-50 p-b-90\">\r\n\r\n                    <Switch>\r\n                        <Route exact path=\"/auth/login\" component={ LoginPage } />\r\n                        <Route exact path=\"/auth/register\" component={ RegisterPage } />\r\n\r\n                        <Redirect to=\"/auth/login\" />\r\n                    </Switch>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n   isAuthenticated,\r\n   component: Component,\r\n   ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( !isAuthenticated )\r\n                    ? <Component { ...props } />\r\n                    : <Redirect to=\"/\" />\r\n            )} \r\n        />\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n   isAuthenticated,\r\n   component: Component,\r\n   ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? <Component { ...props } />\r\n                    : <Redirect to=\"/auth\" />\r\n            )} \r\n        />\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React, { useContext, useEffect } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n  } from 'react-router-dom';\r\nimport { AuthContext } from '../auth/AuthContext';\r\n\r\nimport { ChatPage } from '../pages/ChatPage';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const { auth, verificaToken } = useContext( AuthContext );\r\n\r\n    useEffect( () => {\r\n        verificaToken();\r\n    },[verificaToken])\r\n\r\n\r\n    if ( auth.checking ) {\r\n        return <h1>Espere por favor</h1>\r\n    }\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                \r\n                <Switch>\r\n                    {/* <Route path=\"/auth\" component={ AuthRouter } /> */}\r\n                    <PublicRoute isAuthenticated={ auth.logged } path=\"/auth\" component={ AuthRouter } />\r\n                    <PrivateRoute isAuthenticated={ auth.logged } exact path=\"/\" component={ ChatPage } />\r\n\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { AuthProvider } from './auth/AuthContext';\r\nimport { ChatProvider } from './context/chat/ChatContext';\r\nimport { SocketProvider } from './context/SocketContext';\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nmoment.locale('es');\r\n\r\n\r\nexport const ChatApp = () => {\r\n    return (\r\n        <ChatProvider>\r\n            <AuthProvider>\r\n                <SocketProvider>\r\n                    <AppRouter />\r\n                </SocketProvider>\r\n            </AuthProvider>\r\n        </ChatProvider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ChatApp } from './ChatApp';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n  <ChatApp />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}